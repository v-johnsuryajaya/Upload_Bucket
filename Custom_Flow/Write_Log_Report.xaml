<Activity mc:Ignorable="sap sap2010" x:Class="WriteLogReport" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_PID" Type="InArgument(x:String)" />
    <x:Property Name="in_strPathLog" Type="InArgument(x:String)" />
    <x:Property Name="in_strStatus" Type="InArgument(x:String)" />
    <x:Property Name="in_dateStartPeriod" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_dateEndPeriod" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_listStartEndRange" Type="InArgument(scg:List(s:DateTime))" />
  </x:Members>
  <this:WriteLogReport.in_dateStartPeriod>
    <InArgument x:TypeArguments="s:DateTime" />
  </this:WriteLogReport.in_dateStartPeriod>
  <this:WriteLogReport.in_dateEndPeriod>
    <InArgument x:TypeArguments="s:DateTime" />
  </this:WriteLogReport.in_dateEndPeriod>
  <this:WriteLogReport.in_listStartEndRange>
    <InArgument x:TypeArguments="scg:List(s:DateTime)" />
  </this:WriteLogReport.in_listStartEndRange>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>992.6037735849056,2840.150943396226</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>WriteLogReport_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="60">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="52">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Write_Log_Report" sap:VirtualizedContainerService.HintSize="669.2830188679245,2774.9433962264147" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="sheetName" />
      <Variable x:TypeArguments="x:String" Name="rowDate" />
      <Variable x:TypeArguments="x:String" Name="strAssetValue" />
      <Variable x:TypeArguments="s:String[]" Name="arrDate" />
      <Variable x:TypeArguments="x:String" Name="strDateStartPeriod" />
      <Variable x:TypeArguments="x:String" Name="strDateEndPeriod" />
      <Variable x:TypeArguments="x:String" Name="strListStartEndRange" />
      <Variable x:TypeArguments="s:String[]" Name="arrListStartEndRange" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage sap2010:Annotation.AnnotationText="&quot;RPA010 [&quot;+ datetime.Now.ToString + &quot;] Last Login Status: &quot; +LastLoginStatus" DisplayName="Log Message Log_MarStatus" sap:VirtualizedContainerService.HintSize="607.6981132075472,128.60377358490564" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[String.Format(&quot;{0} [{1}] {2}&quot;, in_PID, Now, &quot;STEP : Log_MarkStatus&quot;)]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <If Condition="[in_dateStartPeriod = DateTime.MinValue]" sap:VirtualizedContainerService.HintSize="607.6981132075472,2496.9056603773583" sap2010:WorkflowViewState.IdRef="If_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="475.47169811320754,961.8113207547169" sap2010:WorkflowViewState.IdRef="Sequence_14">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap2010:Annotation.AnnotationText="Sheet name &quot;MMMM&quot; long month name" DisplayName="Assign Sheet Name" sap:VirtualizedContainerService.HintSize="434.71698113207543,111.39622641509433" sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_dateEndPeriod.ToString("MMMM")]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Currently upload located in Column C&#xA;Row = Date + 1&#xA;Ie : Date 5 means marking on row 6&#xA;Convert date 01 -&gt; 1" DisplayName="Assign Row Date" sap:VirtualizedContainerService.HintSize="434.71698113207543,146.71698113207546" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[rowDate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[(CInt(in_dateEndPeriod.ToString("dd"))+1).ToString]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <ui:WriteCell Cell="[String.Format(&quot;B{0}&quot;, rowDate)]" DisplayName="Write Cell Workbook Current Status on Current Date" sap:VirtualizedContainerService.HintSize="434.71698113207543,115.92452830188678" sap2010:WorkflowViewState.IdRef="WriteCell_7" SheetName="[sheetName]" Text="[in_strStatus]" WorkbookPath="[in_strPathLog]" />
          <If Condition="[in_strStatus.Contains(&quot;Failed&quot;) Or in_strStatus.Contains(&quot;Not Found&quot;)]" DisplayName="If - Status failed or not found, write the same error for upload bucket" sap:VirtualizedContainerService.HintSize="434.71698113207543,382.18867924528297" sap2010:WorkflowViewState.IdRef="If_7">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="374.9433962264151,201.96226415094338" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:WriteCell Cell="[String.Format(&quot;C{0}&quot;, rowDate)]" DisplayName="Write Cell Workbook Current Status on Current Date" sap:VirtualizedContainerService.HintSize="334.18867924528297,115.92452830188678" sap2010:WorkflowViewState.IdRef="WriteCell_8" SheetName="[sheetName]" Text="[in_strStatus]" WorkbookPath="[in_strPathLog]" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="573.2830188679245,1354.8679245283017" sap2010:WorkflowViewState.IdRef="Sequence_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[in_dateStartPeriod &lt;= in_dateEndPeriod]" DisplayName="While" sap:VirtualizedContainerService.HintSize="532.5283018867924,1268.830188679245" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
            <ui:InterruptibleWhile.Body>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496.3018867924528,1105.811320754717" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap2010:Annotation.AnnotationText="Sheet name &quot;MMMM&quot; long month name" DisplayName="Assign Sheet Name" sap:VirtualizedContainerService.HintSize="434.71698113207543,111.39622641509433" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_dateStartPeriod.ToString("MMMM")]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="Currently upload located in Column C&#xA;Row = Date + 1&#xA;Ie : Date 5 means marking on row 6&#xA;Convert date 01 -&gt; 1" DisplayName="Assign Row Date" sap:VirtualizedContainerService.HintSize="434.71698113207543,146.71698113207546" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[rowDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[(CInt(in_dateStartPeriod.ToString("dd"))+1).ToString]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:WriteCell Cell="[String.Format(&quot;B{0}&quot;, rowDate)]" DisplayName="Write Cell Workbook Current Status on Current Date" sap:VirtualizedContainerService.HintSize="434.71698113207543,115.92452830188678" sap2010:WorkflowViewState.IdRef="WriteCell_9" SheetName="[sheetName]" Text="[in_strStatus]" WorkbookPath="[in_strPathLog]" />
                <If Condition="[in_strStatus.Contains(&quot;Failed&quot;) Or in_strStatus.Contains(&quot;Not Found&quot;)]" DisplayName="If - Status failed or not found, write the same error for upload bucket" sap:VirtualizedContainerService.HintSize="434.71698113207543,382.18867924528297" sap2010:WorkflowViewState.IdRef="If_8">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="374.9433962264151,201.96226415094338" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:WriteCell Cell="[String.Format(&quot;C{0}&quot;, rowDate)]" DisplayName="Write Cell Workbook Current Status on Current Date" sap:VirtualizedContainerService.HintSize="334.18867924528297,115.92452830188678" sap2010:WorkflowViewState.IdRef="WriteCell_10" SheetName="[sheetName]" Text="[in_strStatus]" WorkbookPath="[in_strPathLog]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <Assign sap:VirtualizedContainerService.HintSize="434.71698113207543,80.60377358490565" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[in_dateStartPeriod]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[in_dateStartPeriod.AddDays(1)]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ui:InterruptibleWhile.Body>
          </ui:InterruptibleWhile>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>